name: Weekly Changelog Release

on:
  workflow_dispatch:

  schedule:
    - cron: "0 14 * * 5" # Every Friday at 14:00 UTC (15:00 CET/CEST)

permissions:
  contents: write

jobs:
  generate-and-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Generate Weekly Changelog
        run: |
          # Calculate the start (previous Friday) and end date (current Friday)
          END_DATE=$(date -u +"%Y-%m-%d") # Current date (workflow run date, Friday)
          START_DATE=$(date -u -d "$END_DATE - 7 days" +"%Y-%m-%d") # Previous Friday
          
          echo "# Changelog for ${START_DATE} to ${END_DATE}" > CHANGELOG.md
          echo "\n## Changes" >> CHANGELOG.md
          
          # Log commits made during the week window
          git log --since="$START_DATE" --until="$END_DATE" --pretty=format:"- %s (%an)" >> CHANGELOG.md

          # Check if there are any changes
          if grep -q "-" CHANGELOG.md; then
            echo "Changes found. Preparing release."
          else
            echo "No changes this week. Skipping release."
            exit 0
          fi

      - name: Commit Changelog
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add CHANGELOG.md
          git commit -m "Weekly Changelog: ${START_DATE} to ${END_DATE} [skip ci]" || echo "No changes to commit"
          git push origin HEAD

      - name: Create GitHub Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Use the changelog as the release body
          TAG="weekly-changelog-${END_DATE}"
          RELEASE_TITLE="Weekly Changelog: ${START_DATE} to ${END_DATE}"
          BODY=$(cat CHANGELOG.md)
          
          curl -X POST \
            -H "Authorization: Bearer $GITHUB_TOKEN" \
            -H "Content-Type: application/json" \
            -d "$(jq -n --arg tag $TAG --arg title "$RELEASE_TITLE" --arg body "$BODY" \
              '{ tag_name: $tag, name: $title, body: $body, draft: false, prerelease: false }')" \
            https://api.github.com/repos/${{ github.repository }}/releases
