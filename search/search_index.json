{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"PLUTUS: Pair-Trading Toolkit","text":"<p>PLUTUS is a Python-based toolkit for performing pair-trading analysis. This project is designed for educational purposes and provides analysis tools for:</p> <ul> <li>Fetching and processing financial data.</li> <li>Conducting statistical tests (stationarity and cointegration).</li> <li>Performing feature engineering.</li> <li>Visualizing financial time-series data.</li> </ul>"},{"location":"#key-features","title":"\ud83c\udf1f Key Features","text":"<p>\u278a \ud83d\udce5 Data Acquisition </p> <ul> <li>\ud83d\udce1 Fetch historical financial data using Yahoo Finance API.</li> <li>\ud83d\uddc3\ufe0f Store and manage time-series data in a structured format.</li> <li>\ud83d\udd04 Combine and preprocess data for analysis.</li> </ul> <p>\u278b \ud83d\udcca Statistical Tests</p> <p>\ud83d\udcc8 Stationarity Tests</p> <ul> <li>\ud83e\uddea Augmented Dickey-Fuller Test (ADF) tests whether a time series is stationary.</li> <li>\ud83d\udcc9 Phillips-Perron Test (PP) handles autocorrelations and heteroskedasticity.</li> <li>\ud83d\udcca KPSS test for trend stationarity.</li> </ul> <p>\ud83d\udd17 Cointegration Tests</p> <ul> <li>\u2696\ufe0f Engle-Granger identifies long-term equilibrium relationships.</li> <li>\ud83d\udd0d Phillips-Ouliaris handles residual-based cointegration testing.</li> <li>\ud83d\udd04 Johansen Test detects multiple cointegration vectors.</li> </ul> <p>\u278c \ud83d\udee0\ufe0f Feature Engineering </p> <ul> <li>\ud83d\udcc5 Compute periodic returns (daily, weekly, monthly).</li> <li>\ud83d\udd22 Apply logarithmic and exponential transformations.</li> <li>\ud83d\udd17 Calculate correlation matrices and filter securities based on thresholds.</li> <li>\ud83d\udd2c Identify cointegrated pairs for pair trading.</li> </ul> <p>\u278d \ud83d\udcca Data Visualization </p> <ul> <li>\ud83d\udcc8 Plot financial time-series data.</li> <li>\ud83d\udcca Generate dual-axis plots for comparing securities.</li> <li>\ud83d\udd75\ufe0f\u200d\u2642\ufe0f Visualize correlation matrices.</li> <li>\ud83d\udd04 Plot autocorrelation and partial autocorrelation.</li> </ul>"},{"location":"#quick-links","title":"\ud83d\udd17 Quick Links","text":"<ul> <li>PyPI</li> <li>GitHub Repository</li> <li>License</li> </ul> <p>Explore the documentation to learn how to customize and make the most of PLUTUS Pair-Trading Toolkit for your project!</p>"},{"location":"CODE_OF_CONDUCT/","title":"\ud83c\udfdb\ufe0f Code of Conduct","text":""},{"location":"CODE_OF_CONDUCT/#our-pledge","title":"\ud83d\udcdc Our Pledge","text":"<p>We, as community members, contributors, and leaders, pledge to create an inclusive, welcoming, and harassment-free experience for everyone, regardless of:</p> <ul> <li>Age, appearance, body size, or visible/invisible disabilities</li> <li>Ethnicity, race, nationality, or socio-economic status</li> <li>Gender identity, sexual orientation, or personal beliefs</li> <li>Level of experience, education, or background</li> </ul> <p>We commit to fostering an open and respectful environment where everyone feels safe, valued, and empowered to contribute.</p>"},{"location":"CODE_OF_CONDUCT/#our-standards","title":"\ud83d\udc8e Our Standards","text":"<p>Examples of positive behavior:</p> <p>\u2705 Showing empathy, kindness, and respect toward others</p> <p>\u2705 Welcoming new contributors and guiding them patiently</p> <p>\u2705 Accepting constructive feedback with grace and professionalism</p> <p>\u2705 Taking responsibility for mistakes and learning from them</p> <p>\u2705 Prioritizing what\u2019s best for the community as a whole, not just individuals</p> <p>Examples of unacceptable behavior:</p> <p>\ud83d\udeab Using sexualized language, imagery, or unwanted attention</p> <p>\ud83d\udeab Trolling, personal attacks, or inflammatory comments</p> <p>\ud83d\udeab Harassment (public or private), intimidation, or bullying</p> <p>\ud83d\udeab Publishing private information (emails, addresses, etc.) without consent</p> <p>\ud83d\udeab Sustained disruption of discussions, projects, or community events</p>"},{"location":"CODE_OF_CONDUCT/#enforcement-responsibilities","title":"\u2696\ufe0f Enforcement Responsibilities","text":"<p>Community leaders\u2014including maintainers, moderators, and core contributors\u2014are responsible for enforcing this Code of Conduct by:</p> <ul> <li>Reviewing all reported incidents in a fair and confidential manner</li> <li>Removing, editing, or rejecting comments, commits, issues, and contributions that violate these standards</li> <li>Communicating moderation decisions clearly and professionally</li> </ul> <p>Failure to comply with these guidelines may result in warnings, temporary bans, or permanent removal from the community.</p>"},{"location":"CODE_OF_CONDUCT/#reporting-violations","title":"\ud83d\udea8 Reporting Violations","text":"<p>If you witness or experience unacceptable behavior, please report it immediately. We take violations seriously and will respond within 3 business days.</p> <p>\ud83d\udce8 Report via email: conduct@fox-techniques.com</p> <p>\ud83d\udd12 All reports are kept confidential.</p> <p>When reporting, please include:</p> <ul> <li>A detailed description of the incident (including dates &amp; locations)</li> <li>Any supporting evidence (screenshots, links, messages)</li> <li>Your preferred outcome (if applicable)</li> </ul> <p>If you're unsure whether something is a violation, ask us! We're here to help.</p>"},{"location":"CODE_OF_CONDUCT/#enforcement-guidelines","title":"\ud83d\udccc Enforcement Guidelines","text":"<p>Community leaders will follow these guidelines to determine appropriate consequences for violations:</p> <p>\u278a \u26a0\ufe0f Warning</p> <ul> <li>Impact: Minor infraction (e.g., inappropriate language or unintentional offense)</li> <li>Action: Private warning with an explanation of the violation. A public apology may be requested.</li> </ul> <p>\u278b \ud83d\udeab Temporary Ban</p> <ul> <li>Impact: Repeated infractions, harassment, or intentional disruption</li> <li>Action: Temporary ban from community spaces, discussions, and direct interactions.</li> </ul> <p>\u278c \u274c Permanent Ban</p> <ul> <li>Impact: Serious violations, including threats, doxxing, or extreme harassment</li> <li>Action: Permanent removal from all community platforms.</li> </ul> <p>\ud83d\ude80 Appeals: If you believe an enforcement action was taken unfairly, you may appeal by emailing conduct@fox-techniques.com.</p>"},{"location":"CODE_OF_CONDUCT/#scope","title":"\ud83c\udf0e Scope","text":"<p>This Code of Conduct applies everywhere, including:</p> <ul> <li>GitHub repositories (issues, discussions, PRs)</li> <li>Community chat channels (Discord, Slack, forums)</li> <li>Conferences, meetups, and official events</li> <li>Social media accounts affiliated with this project</li> </ul> <p>Maintainers reserve the right to act on violations even if they occur outside these spaces, if they impact the safety and inclusivity of the community.</p>"},{"location":"CODE_OF_CONDUCT/#attribution","title":"\ud83d\udcdc Attribution","text":"<p>This Code of Conduct is adapted from:</p> <ul> <li>Contributor Covenant v2.0</li> <li>Mozilla\u2019s Code of Conduct Enforcement Ladder</li> </ul> <p>\u2049\ufe0f For FAQs and translations, visit: Contributor Covenant FAQ</p>"},{"location":"CONTRIBUTING/","title":"\u2728 Contributing Guidelines","text":"<p>We welcome all contributions, including pull requests, bug reports, and discussions. Thank you for helping improve PLUTUS Pair-Trading Toolkit!</p>"},{"location":"CONTRIBUTING/#code-of-conduct","title":"\ud83d\udcdc Code of Conduct","text":"<p>Please review our Code of Conduct. All contributors are expected to follow it. Any inappropriate behavior or violations will not be tolerated.  </p>"},{"location":"CONTRIBUTING/#how-to-get-help","title":"\u2753 How to Get Help","text":"<p>See our Support Guide. Do not use GitHub issues for general questions\u2014ask on Stack Overflow instead.  </p>"},{"location":"CONTRIBUTING/#bug-reports-issues","title":"\ud83d\udc1e Bug Reports &amp; Issues","text":""},{"location":"CONTRIBUTING/#do","title":"\ud83c\udfc1 DO","text":"<p>\u2705 Check the documentation &amp; Support Guide before opening an issue.  </p> <p>\u2705 Search existing issues to avoid duplicates.  </p> <p>\u2705 Provide clear details\u2014steps to reproduce, error logs, expected vs. actual behavior.  </p> <p>\u2705 Use Markdown formatting (wrap code in triple backticks <code>```</code>).  </p>"},{"location":"CONTRIBUTING/#dont","title":"\u26d4 DON'T","text":"<p>\u274c Open duplicate issues.</p> <p>\u274c Comment \"+1\"\u2014use GitHub reactions instead.  </p>"},{"location":"CONTRIBUTING/#feature-requests","title":"\ud83d\udca1 Feature Requests","text":"<ul> <li>Clearly describe the problem your feature solves.  </li> <li>Explain why it's useful for others.  </li> <li>If possible, outline a potential implementation.  </li> <li>Avoid feature creep\u2014we prioritize core functionality.  </li> </ul>"},{"location":"CONTRIBUTING/#submitting-pull-requests","title":"\ud83d\ude80 Submitting Pull Requests","text":"<p>Before submitting a PR:  </p> <p>\u2714 Open an issue first (for large changes).  </p> <p>\u2714 Keep PRs small\u2014one bug fix or feature per PR.  </p> <p>\u2714 Follow existing coding styles.  </p> <p>\u2714 Include tests and update documentation if necessary.  </p> <p>\u2714 Ensure CI checks pass before requesting review.  </p>"},{"location":"CONTRIBUTING/#pr-workflow","title":"\ud83d\udd04 PR Workflow","text":"Step Action Required \ud83d\udcdd Open Issue Discuss the problem/feature first. \ud83c\udfd7\ufe0f Fork &amp; Code Follow project structure, add tests. \ud83d\udcd1 Create PR Provide a clear description. \ud83d\udd0d Code Review Address comments &amp; improve PR. \u2705 Merge &amp; Release After approval, maintainers merge it."},{"location":"CONTRIBUTING/#writing-commit-messages","title":"\ud83d\udcdd Writing Commit Messages","text":"<p>Follow these commit message rules: </p> <p>\u2714 Use the imperative mood \u2192 (\"Fix crash\", not \"Fixed crash\"). \u2714 Keep subject under 50 chars, and wrap body at 72 chars. \u2714 Explain why the change is needed, not just what it does. \u2714 Prefix relevant component \u2192 (e.g., <code>[docs]</code>, <code>[data_generations]</code>, <code>[stationarity_tests]</code>).  </p> <p>Example: <pre><code>[cointegration] Implement core logic for pair trading strategy\n\nAdded initial framework for pair selection and signal generation  \nIntegrated statistical arbitrage model for trade execution  \nImproved backtesting module with performance metrics  \n\nResolves: #123\n</code></pre></p>"},{"location":"CONTRIBUTING/#certificate-of-origin","title":"\ud83c\udfc5 Certificate of Origin","text":"<p>Developer's Certificate of Origin 1.1</p> <p>By making a contribution to this project, I certify that:</p> <ol> <li>The contribution was created in whole or in part by me and I have the right to submit it under the open-source license indicated in the file; or</li> <li>The contribution is based upon previous work that, to the best of my knowledge, is covered under an appropriate open-source license, and I have the right under that license to submit that work with modifications, whether created in whole or in part by me, under the same open-source license (unless I am permitted to submit under a different license), as indicated in the file; or</li> <li>The contribution was provided directly to me by some other person who certified (1), (2), or (3), and I have not modified it.</li> <li>I understand and agree that this project and the contribution are public and that a record of the contribution (including all personal information I submit with it, including my sign-off) is maintained indefinitely and may be redistributed consistently with this project or the open-source license(s) involved.</li> </ol>"},{"location":"CONTRIBUTING/#summary","title":"\ud83d\udccc Summary","text":"<p>\ud83c\udfaf Report bugs &amp; feature requests properly.</p> <p>\ud83d\ude80 Follow PR &amp; coding guidelines.</p> <p>\u270d Write clear commit messages.</p> <p>\ud83d\udcdc Respect the Code of Conduct.</p> <p>\ud83d\ude4c Thank you for contributing to PLUTUS Pair-Trading Toolkit!</p>"},{"location":"LICENSE/","title":"\ud83d\udcdc License","text":"<p>MIT License</p> <p>Copyright (c) 2025 FOX Techniques</p> <p>Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:</p> <p>The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.</p> <p>THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.</p>"},{"location":"SECURITY/","title":"\ud83d\udd12 Security Policies","text":""},{"location":"SECURITY/#supported-versions","title":"\u2705 Supported Versions","text":"<p>We provide updates and security patches for the following versions:</p> Version Supported 1.1.x  Actively Maintained 1.0.x"},{"location":"SECURITY/#reporting-a-security-vulnerability","title":"\ud83d\udee1\ufe0f Reporting a Security Vulnerability","text":"<p>If you discover a security issue, please report it privately to us as soon as possible.</p> <p>\ud83d\udea8 DO NOT open a public GitHub issue for security vulnerabilities. Instead, follow these steps:</p> <p>\u278a \ud83d\udce9 Send an email to security@fox-techniques.com Include as many details as possible (e.g., steps to reproduce, potential impact).</p> <p>\u278b \u23f3 We aim to respond within 3 business days. We\u2019ll acknowledge receipt, assess the issue, and provide updates.</p> <p>\u278c \ud83d\udee0\ufe0f We will work on a fix ASAP and coordinate disclosure. We follow responsible disclosure practices to ensure affected parties are notified properly.</p> <p>Thank you for helping keep PLUTUS Pair-Trading Toolkit secure! \ud83d\ude4c</p>"},{"location":"SUPPORT/","title":"\ud83d\udce3 Support and Help","text":"<p>Need help getting started or using the project? Here's how.</p>"},{"location":"SUPPORT/#how-to-get-help","title":"\ud83d\ude91 How to Get Help","text":"<p>For general usage questions that are not specific to the project itself, please search for answers on Stack Overflow. This is the best way to get help quickly and allows others to benefit from shared knowledge.</p> <p>We recommend seeking support in the following ways:</p> <p>\u278a \ud83d\udcd6 Read the Documentation &amp; Guides. Before asking for help, check the documentation and guides for solutions. Hands-on experience is the best way to learn! We\u2019re rooting for you! \ud83d\udc4f</p> <p>\u278b \ud83d\udd0d Search &amp; Ask on Stack Overflow. If you're troubleshooting an issue or trying to use the project in a specific way, search existing questions or ask new ones on Stack Overflow.</p> <p>\u278c \ud83d\udcac Join Our Discord Community. We don\u2019t provide direct \u201ccustomer support,\u201d but we are happy to engage in discussions, answer questions, and chat about best practices. We\u2019ll try our best to respond, but please be patient! \ud83d\udc0c</p> <p>\u278d \u270d\ufe0f Open a GitHub Issue (Last Resort!)</p> <p>If you believe you\u2019ve found a bug or need help that only the maintainers can provide, open a GitHub issue. When doing so:</p> <ol> <li>\u2705 Clearly explain your issue and what you're trying to accomplish.</li> <li>\u2705 List what you\u2019ve already tried.</li> <li>\u2705 Provide minimal, reproducible code samples (but do not attach your entire project).</li> </ol>"},{"location":"SUPPORT/#what-not-to-do","title":"\u274c What NOT to Do","text":"<p>When seeking support, please avoid the following:</p> <ol> <li>\ud83d\udeab Do not message contributors on Twitter or other social media.</li> <li>\ud83d\udeab Do not spam issues with +1 comments or duplicate issues.</li> </ol> <p>Public questions get public answers, which benefit everyone in the community. Let\u2019s keep discussions open and helpful! \u270c\ufe0f</p>"},{"location":"demo/","title":"\ud83c\udfa5 Demo","text":""},{"location":"demo/#plutus-pair-identification","title":"\ud83c\udfac PLUTUS Pair Identification","text":"<p>In this section, we demonstrate how to identify cointegrated pairs using the PLUTUS.</p> plutus_pair_identification_demo.py<pre><code>import plutus_pairtrading.data_acquisitions as dacq\nimport plutus_pairtrading.data_generations as dgen\nimport plutus_pairtrading.data_visualizations as dviz\n\n# Fetch stock data for multiple securities\nAAPL_df = dacq.fetch_yahoo_finance_data(\"AAPL\", start_date=\"2015-01-01\", end_date=\"2021-01-01\")\nMSFT_df = dacq.fetch_yahoo_finance_data(\"MSFT\", start_date=\"2015-01-01\", end_date=\"2021-01-01\")\nGOOG_df = dacq.fetch_yahoo_finance_data(\"GOOG\", start_date=\"2015-01-01\", end_date=\"2021-01-01\")\nTSLA_df = dacq.fetch_yahoo_finance_data(\"TSLA\", start_date=\"2015-01-01\", end_date=\"2021-01-01\")\n\n# Combine the data into a single DataFrame\nstock_df = dacq.combine_dataframes([AAPL_df, MSFT_df, GOOG_df, TSLA_df])\n\n# Perform pair identification\npairs_df = dgen.pairs_identification(\n    data=stock_df,\n    stationarity_method=\"ADF\",\n    cointegration_method=\"phillips-ouliaris\",\n    stationarity_significance_level=0.05,\n    coint_significance_level=0.05,\n)\n\n# Display the identified pairs\nprint(pairs_df)\n</code></pre>"},{"location":"demo/#plutus-stationarity-tests","title":"\ud83d\udcc8 PLUTUS Stationarity Tests","text":"<p>PLUTUS provides a comprehensive suite of statistical tests to assess the properties of financial time-series data, ensuring robust pair-trading strategies. These tests help evaluate stationarity:</p> <ul> <li>\ud83e\uddea Augmented Dickey-Fuller (ADF) evaluates whether a series is stationary or contains a unit root.</li> <li>\ud83d\udcc9 Phillips-Perron (PP) is a non-parametric test for stationarity.</li> <li>\ud83d\udccaKwiatkowski-Phillips-Schmidt-Shin (KPSS) checks if a series is stationary around a deterministic trend.</li> </ul>"},{"location":"demo/#augmented-dickey-fuller","title":"\ud83e\uddea Augmented Dickey-Fuller","text":"ADFResult plutus_stationarity_test_ADF_demo.py<pre><code>import plutus_pairtrading.data_acquisitions as dacq\nimport plutus_pairtrading.tests as tsts\n\n# Fetch stock data\nTSLA_df = dacq.fetch_yahoo_finance_data(\"TSLA\", start_date=\"2020-01-01\", end_date=\"2024-12-30\")\n\n# Perform ADF Test\nADF_result = tsts.augmented_dickey_fuller_test(\n    data=TSLA_df,\n    security=\"TSLA_close\",\n    trend=\"constant\",\n    significance_level=0.05,\n)\n\nprint(ADF_result)\n</code></pre> <pre><code>{\n    \"Statistic\": -1.93, \n    \"p-Value\": 0.318, \n    \"Stationary\": False, \n    \"Lags\": 10, \n    \"Trend\": \"constant\", \n    \"Critical Values\": {\n        \"1%\": -3.44, \n        \"5%\": -2.86,\n        \"10%\": -2.57\n        }\n}\n</code></pre>"},{"location":"demo/#phillips-perron","title":"\ud83d\udcc9 Phillips-Perron","text":"PPResult plutus_stationarity_test_PP_demo.py<pre><code>import plutus_pairtrading.data_acquisitions as dacq\nimport plutus_pairtrading.tests as tsts\n\n# Fetch stock data\nTSLA_df = dacq.fetch_yahoo_finance_data(\"TSLA\", start_date=\"2020-01-01\", end_date=\"2024-12-30\")\n\n# Perform PP Test\nPP_result = tsts.philips_perron_test(\n    data=TSLA_df,\n    security=\"TSLA_close\",\n    trend=\"constant\",\n    significance_level=0.05,\n)\n\nprint(PP_result)\n</code></pre> <pre><code>{\n    \"Statistic\": -0.49,\n    \"p-Value\": 0.89,\n    \"Stationary\": False,\n    \"Lags\": 1255,\n    \"Trend\": \"constant\",\n    \"Critical Values\": {\n        \"1%\": -3.44,\n        \"5%\": -2.86,\n        \"10%\": -2.57\n    }\n}\n</code></pre>"},{"location":"demo/#kwiatkowski-phillips-schmidt-shin","title":"\ud83d\udcca Kwiatkowski-Phillips-Schmidt-Shin","text":"KPSSResult plutus_stationarity_test_PP_demo.py<pre><code>import plutus_pairtrading.data_acquisitions as dacq\nimport plutus_pairtrading.tests as tsts\n\n# Fetch stock data \nTSLA_df = dacq.fetch_yahoo_finance_data(\"TSLA\", start_date=\"2020-01-01\", end_date=\"2024-12-30\")\n\n# Perform KPSS Test\nKPSS_result = tsts.KPSS_test(\n    data=TSLA_df,\n    security=\"TSLA_close\",\n    trend=\"constant\",\n    significance_level=0.05,\n)\n\nprint(KPSS_result)\n</code></pre> <pre><code>{\n    \"Statistic\": 1.51,\n    \"p-Value\": 0.0002,\n    \"Stationary\": False,\n    \"Lags\": 20,\n    \"Trend\": \"constant\",\n    \"Critical Values\": {\n        \"1%\": 0.743,\n        \"5%\": 0.461,\n        \"10%\": 0.348\n    }\n}\n</code></pre>"},{"location":"demo/#plutus-cointegration-tests","title":"\ud83d\udd17 PLUTUS Cointegration Tests","text":"<p>PLUTUS provides a comprehensive suite of statistical tests to assess the properties of financial time-series data, ensuring robust pair-trading strategies. These tests help evaluate integration order, and cointegration between time-series. Available tests are:</p> <ul> <li>\u2696\ufe0f Engle-Granger performs test for cointegration between two time-series.</li> <li>\ud83d\udd0d Phillips-Ouliaris is another  method to assess cointegration between two series.</li> <li>\ud83d\udd04 Johansen evaluates cointegration among multiple time-series.</li> </ul> <p>These tests are critical for identifying relationships between time-series and determining their suitability for pair-trading strategies.</p>"},{"location":"demo/#engle-granger","title":"\u2696\ufe0f Engle-Granger","text":"Engle-GrangerResult plutus_pairtrading_cointegration_EG_test.py<pre><code>import plutus_pairtrading.data_acquisitions as dacq\nimport plutus_pairtrading.tests as tsts\n\n# Fetch stock data for multiple securities\nTSLA_df = dacq.fetch_yahoo_finance_data(\"TSLA\", start_date=\"2020-01-01\", end_date=\"2024-12-30\")\nGE_df = dacq.fetch_yahoo_finance_data(\"GE\", start_date=\"2020-01-01\", end_date=\"2024-12-30\")\n\n# Combine the historical data of the stocks\nstock_df = dacq.combine_dataframes([TSLA_df, GE_df])\n\n# Perform Engle-Granger Test\nresult = tsts.engle_granger_cointegration_test(\n    data=stock_df,\n    securities=[\"TSLA_close\", \"GE_close\"],\n    trend=\"constant\",\n    significance_level=0.05,\n)\n\nprint(result)\n</code></pre> <pre><code>{\n    \"Cointegrated\": False,\n    \"Cointegrated Vector\": {\n        \"TSLA_close\": 1.0,\n        \"GE_close\": -0.48711,\n        \"const\": -174.772825\n    },\n    \"Critical Value\": -3.34,\n    \"Statistic\": -2.25,\n    \"Trend\": \"c\",\n    \"p-Value\": 0.3986,\n    \"spread_TSLA_close_GE_close\": {\n        \"2020-01-02\": -175.05,\n        \"2020-01-03\": -174.30,\n        \"2020-01-06\": -174.14,\n        \"2020-01-07\": -172.76,\n        \"2020-01-08\": -170.95,\n        \"...\": \"...\",\n        \"2024-12-24\": 203.97,\n        \"2024-12-26\": 195.50,\n        \"2024-12-27\": 174.04\n    }\n}\n</code></pre>"},{"location":"demo/#phillips-ouliaris","title":"\ud83d\udd0d Phillips-Ouliaris","text":"Phillips-OuliarisResult plutus_pairtrading_cointegration_PO_test.py<pre><code>import plutus_pairtrading.data_acquisitions as dacq\nimport plutus_pairtrading.tests as tsts\n\n# Fetch stock data for multiple securities\nTSLA_df = dacq.fetch_yahoo_finance_data(\"TSLA\", start_date=\"2020-01-01\", end_date=\"2024-12-30\")\nGE_df = dacq.fetch_yahoo_finance_data(\"GE\", start_date=\"2020-01-01\", end_date=\"2024-12-30\")\n\n# Combine the historical data of the stocks\nstock_df = dacq.combine_dataframes([TSLA_df, GE_df])\n\n# Perform Engle-Granger Test\nresult = tsts.phillips_ouliaris_cointegration_test(\n    data=stock_df,\n    securities=[\"TSLA_close\", \"GE_close\"],\n    trend=\"constant\",\n    significance_level=0.05,\n)\n\nprint(result)\n</code></pre> <pre><code>{\n    \"Statistic\": -2.0986,\n    \"p-Value\": 0.4757,\n    \"Critical Value\": -3.3435,\n    \"Trend\": \"c\",\n    \"Cointegrated Vector\": {\n        \"TSLA_close\": 1.0,\n        \"GE_close\": -0.48711,\n        \"const\": -174.772825\n    },\n    \"Cointegrated\": False,\n    \"spread_TSLA_close_GE_close\": {\n        \"2020-01-02\": -175.0528,\n        \"2020-01-03\": -174.2999,\n        \"2020-01-06\": -174.1439,\n        \"2020-01-07\": -172.7574,\n        \"2020-01-08\": -170.9517,\n        \"...\": \"...\",\n        \"2024-12-24\": 203.9726,\n        \"2024-12-26\": 195.5012,\n        \"2024-12-27\": 174.0395\n    }\n}\n</code></pre>"},{"location":"demo/#johannes","title":"\ud83d\udd04 Johannes","text":"JohannesResult plutus_pairtrading_cointegration_J_test.py<pre><code>import plutus_pairtrading.data_acquisitions as dacq\nimport plutus_pairtrading.tests as tsts\n\n# Fetch stock data for multiple securities\nTSLA_df = dacq.fetch_yahoo_finance_data(\"TSLA\", start_date=\"2020-01-01\", end_date=\"2024-12-30\")\nGE_df = dacq.fetch_yahoo_finance_data(\"GE\", start_date=\"2020-01-01\", end_date=\"2024-12-30\")\n\n# Combine the historical data of the stocks\nstock_df = dacq.combine_dataframes([TSLA_df, GE_df])\n\n# Perform Engle-Granger Test\nresult = tsts.phillips_ouliaris_cointegration_test(\n    data=stock_df,\n    securities=[\"TSLA_close\", \"GE_close\"],\n    trend=\"constant\",\n    significance_level=0.05,\n)\n\nprint(result)\n</code></pre> <pre><code>{\n    \"Statistics and Critical Values\": [\n        {\n            \"Null Hypothesis\": \"r&lt;=0\",\n            \"Statistic\": 20.9772,\n            \"Critical Value (95%)\": 29.7961\n        },\n        {\n            \"Null Hypothesis\": \"r&lt;=1\",\n            \"Statistic\": 6.7329,\n            \"Critical Value (95%)\": 15.4943\n        },\n        {\n            \"Null Hypothesis\": \"r&lt;=2\",\n            \"Statistic\": 0.0030,\n            \"Critical Value (95%)\": 3.8415\n        }\n    ],\n    \"Eigenvalues\": [0.0112948, 0.0053524, 0.0000024],\n    \"Eigenvectors\": [\n        [0.0187234, 0.0059437, -0.0072621],\n        [0.0370668, -0.0278356, -0.0166753],\n        [-0.0653901, 0.0167287, 0.0012695]\n    ],\n    \"Trend\": \"constant\",\n    \"#Cointegrated Vectors\": 0,\n    \"Spread\": {\n        \"2020-01-02\": -2.1689,\n        \"2020-01-03\": -2.0979,\n        \"2020-01-06\": -2.0945,\n        \"2020-01-07\": -2.0663,\n        \"2020-01-08\": -2.1362,\n        \"...\": \"...\",\n        \"2024-12-24\": -1.8717,\n        \"2024-12-26\": -2.0534,\n        \"2024-12-27\": -2.3266\n    }\n}\n</code></pre>"},{"location":"demo/#plutus-data-acquisition","title":"\ud83d\udce5 PLUTUS Data Acquisition","text":"<p>This section highlights how to acquire data using the PLUTUS package:</p> <p>You can fetch historical financial data for multiple tickers using the fetch_yahoo_finance_data function.</p> CodeCombined DataFrameTime-Series Plot data_acquisition_demo.py<pre><code>import plutus_pairtrading.data_acquisitions as dacq\n\n# Fetch stock data for AAPL, MSFT, and TSLA\nAAPL_df = dacq.fetch_yahoo_finance_data(\n    \"AAPL\", start_date=\"2015-01-01\", end_date=\"2021-01-01\",\n)\nMSFT_df = dacq.fetch_yahoo_finance_data(\n    \"MSFT\", start_date=\"2015-01-01\", end_date=\"2021-01-01\"\n)\nTSLA_df = dacq.fetch_yahoo_finance_data(\n    \"TSLA\", start_date=\"2015-01-01\", end_date=\"2021-01-01\"\n)\n\n# Combine the data into a single DataFrame\nstock_df = dacq.combine_dataframes([AAPL_df, MSFT_df, TSLA_df])\n\n# Save the data to CSV files\ndacq.store_data_as_csv(AAPL_df, \"data/tickers/AAPL.csv\", )\ndacq.store_data_as_csv(MSFT_df, \"data/tickers/MSFT.csv\")\ndacq.store_data_as_csv(TSLA_df, \"data/tickers/TSLA.csv\")\n\ncombined_df = dacq.read_and_combine_ticker_files(\n    directory_path=\"data/tickers\",\n    tickers=[\"AAPL\", \"MSFT\", \"TSLA\"],\n    date_column=\"date\",\n    column_suffix=[\"close\", \"close_adj\"],\n    join_type=\"inner\",\n)\n</code></pre> date AAPL_close_adj AAPL_close MSFT_close_adj MSFT_close TSLA_close_adj TSLA_close 2015-01-02 24.347172 27.332500 40.232841 46.759998 14.620667 14.620667 2015-01-05 23.661276 26.562500 39.862869 46.330002 14.006000 14.006000 2015-01-06 23.663506 26.565001 39.277802 45.650002 14.085333 14.085333 2015-01-07 23.995310 26.937500 39.776840 46.230000 14.063333 14.063333 2015-01-08 24.917269 27.972500 40.946987 47.590000 14.041333 14.041333 <p></p>"},{"location":"demo/#plutus-data-visualization","title":"\ud83d\udcca PLUTUS Data Visualization","text":"<p>PLUTUS has <code>data_visualizations</code> module. Here\u2019s how each plot for pair-trading looks like:</p> ACF and PACFCorrelation MatrixTime-series PlotDual Y-Axis Plot <p></p> <p></p> <p>Here is the code to plot autocorrelation and partial-autocorrelation functions for a security:</p> plutus_plot_acf_pacf_demo.py<pre><code>import plutus_pairtrading.data_acquisitions as dacq\nimport plutus_pairtrading.data_visualizations as dviz\n\n# Fetch stock data\nAAPL_df = dacq.fetch_yahoo_finance_data(\"AAPL\", start_date=\"2015-01-01\", end_date=\"2021-01-01\")   \n\n# Plot autocorrelation plot\nacf_fig = dviz.plot_acf(AAPL_df, security=\"AAPL_close\")\n\n# Plot partial-autocorrelation plot\npacf_fig = dviz.plot_pacf(AAPL_df, security=\"AAPL_close\")\n\n#acf_fig.show() \npacf_fig.show()\n</code></pre> <p></p> <p>Here is the code to generate the correlation matrix plot: </p> plutus_plot_correlation_matrix_demo.py<pre><code>import plutus_pairtrading.data_acquisitions as dacq\nimport plutus_pairtrading.data_visualizations as dviz\n\n# Fetch stock data\nAAPL_df = dacq.fetch_yahoo_finance_data(\"AAPL\", start_date=\"2015-01-01\", end_date=\"2021-01-01\")   \nMSFT_df = dacq.fetch_yahoo_finance_data(\"MSFT\", start_date=\"2015-01-01\", end_date=\"2021-01-01\")   \nGOOG_df = dacq.fetch_yahoo_finance_data(\"GOOG\", start_date=\"2015-01-01\", end_date=\"2021-01-01\")\n\nstock_df = dacq.combine_dataframes([AAPL_df, MSFT_df, GOOG_df])\n\n# Plot correlation matrix\nfig = dviz.plot_correlation_matrix(\n    data=stock_df,\n    securities=[\"AAPL_close\", \"MSFT_close\", \"GOOG_close\"],\n)\n\nfig.show() \n</code></pre> <p></p> <p>Here is the code to generate the time-series plot: </p> plutus_plot_timeseries_demo.py<pre><code>import plutus_pairtrading.data_acquisitions as dacq\nimport plutus_pairtrading.data_visualizations as dviz\n\n# Fetch stock data\nAAPL_df = dacq.fetch_yahoo_finance_data(\"AAPL\", start_date=\"2015-01-01\", end_date=\"2021-01-01\")   \nMSFT_df = dacq.fetch_yahoo_finance_data(\"MSFT\", start_date=\"2015-01-01\", end_date=\"2021-01-01\")   \nGOOG_df = dacq.fetch_yahoo_finance_data(\"GOOG\", start_date=\"2015-01-01\", end_date=\"2021-01-01\")\n\nstock_df = dacq.combine_dataframes([AAPL_df, MSFT_df, GOOG_df])\n\n# Plot time-series\nfig = dviz.plot_timeseries(\n    data=stock_df,\n    securities=[\"AAPL_close\", \"MSFT_close\", \"GOOG_close\"],\n    plot_title=\"Stock Prices\",\n    x_label=\"Date\",\n    y_label=\"Price\",\n    line_colors=[\"#6F5AD6\", \"#E28A37\", \"#328847\"],\n)\n\nfig.show()   \n</code></pre> <p></p> <p>Here is the code to generate the dual y-axis time-series plot: </p> plutus_plot_dual_timeseries_demo.py<pre><code>import plutus_pairtrading.data_acquisitions as dacq\nimport plutus_pairtrading.data_visualizations as dviz\n\n# Fetch stock data\nMSFT_df = dacq.fetch_yahoo_finance_data(\"MSFT\", start_date=\"2015-01-01\", end_date=\"2021-01-01\")   \nGOOG_df = dacq.fetch_yahoo_finance_data(\"GOOG\", start_date=\"2015-01-01\", end_date=\"2021-01-01\")\n\nstock_df = dacq.combine_dataframes([MSFT_df, GOOG_df])\n\n# Plot dual y-axis time-series\nfig = dviz.plot_dual_timeseries(\n    data=stock_df,\n    securities=[\"GOOG_close\", \"MSFT_close\"],\n    plot_title=\"Stock Prices\",\n    line_colors=[\"#3C8BE5\", \"#C93F8C\"],\n)\n\nfig.show() \n</code></pre> <p>Thank you for exploring our demo!\ud83d\ude4c  We hope this example has given you a brief understanding of how to utilize our package and integrate its features into your projects. Whether you're just getting started or diving deeper, our goal is to make your experience as seamless and productive as possible.</p> <p>Happy coding! \ud83d\udcbb\ud83d\udca1\ud83c\udf40</p>"},{"location":"installation/","title":"\ud83d\udce5 Installation","text":"<p>Prerequisites:</p> <ul> <li>\ud83d\udc0d Python 3.10 or higher </li> <li>\ud83d\udce6 pip or Poetry </li> </ul>"},{"location":"installation/#pip","title":"\ud83d\udce6 pip","text":"<p>PLUTUS is published as a python package and can be installed with <code>pip</code>, ideally by using a virtual environment. Open up a terminal and install with:</p> Latest1.x <pre><code>pip install plutus-pairtrading\n</code></pre> <pre><code>pip install plutus-pairtrading==\"1.*\" # (1)!\n</code></pre> <ol> <li> <p>PLUTUS uses semantic versioning.</p> <p>This will make sure that you don't accidentally [upgrade to the next major version], which may include breaking changes that silently corrupt your site. Additionally, you can use <code>pip freeze</code> to create a lockfile, so builds are reproducible at all times:</p> <pre><code>pip freeze &gt; requirements.txt\n</code></pre> <p>Now, the lockfile can be used for installation:</p> <pre><code>pip install -r requirements.txt\n</code></pre> </li> </ol> <p>This will automatically install compatible versions of all dependencies. PLUTUS always strives to support the latest versions, so there's no need to install the dependencies separately. PLUTUS dependencies are listed below: </p> <p>numpy | pandas | plotly | requests | matplotlib | yfinance | arch | seaborn</p> <p>Tip</p> <p>If you don't have prior experience with Python, we recommend reading Using Python's pip to Manage Your Projects' Dependencies, which is a really good introduction on the mechanics of Python package management and helps you troubleshoot if you run into errors.</p>"},{"location":"installation/#git","title":"\ud83d\udc19 Git","text":"<p>PLUTUS can be directly used from GitHub by cloning the repository into a subfolder of your project root which might be useful if you want to use the very latest version:</p> <pre><code>git clone https://github.com/fox-techniques/plutus-pairtrading.git\n</code></pre> <p>Next, install the theme and its dependencies with:</p> <pre><code>pip install -e plutus-pairtrading\n</code></pre>"},{"location":"installation/#poetry","title":"\ud83c\udfad Poetry","text":"<p>Installing PLUTUS:</p> <pre><code>poetry add plutus-pairtrading\n</code></pre> <p>This command downloads and installs the package and its dependencies and adds the package as a dependency in your <code>pyproject.toml</code>.</p> <p>Using the Package:</p> <p>After installation, you can start using the package in your project. If you need to enter the virtual environment managed by Poetry, run:</p> <pre><code>poetry shell\n</code></pre> <p>Verify the Installation:</p> <pre><code>poetry show plutus-pairtrading\n</code></pre> <p>Updating the Package:</p> <pre><code>poetry update plutus-pairtrading\n</code></pre> <p>Add packages to a group:</p> <pre><code>poetry add --group notebook jupyter ipykernel\n</code></pre> <p>Install the dependencies from a group: <pre><code>poetry install --with notebook\n</code></pre></p>"}]}